{"version":3,"sources":["styles/styleComponents/StyledSearch.js","components/organism/Search.js"],"names":["useStyles","makeStyles","input","background","width","margin","textAlign","alignSelf","position","top","left","StyledHeader","styled","header","Search","history","useHistory","fetchContext","useContext","FetchContext","classes","useEffect","value","getPopularMovies","resetMovies","searchMovies","handleChange","e","push","setText","target","style","backgroundImage","popularMovie","Autocomplete","id","options","movies","map","element","title","getOptionSelected","option","onInputChange","event","renderInput","params","TextField","className","onChange","label","variant"],"mappings":"iMAIaA,EAAYC,YAAW,CAChCC,MAAO,CACHC,WAAY,gEACZC,MAAO,MACPC,OAAQ,SACRC,UAAW,SACXC,UAAW,SACXC,SAAU,WACVC,IAAK,MACLC,KAAM,SAIDC,EAAeC,UAAOC,OAAV,of,OCsCVC,UA5CA,WAEX,IAAMC,EAAUC,cACVC,EAAeC,qBAAWC,KAC1BC,EAAUpB,IAEhBqB,qBAAU,WACqB,KAAvBJ,EAAaK,MAAcL,EAAaM,mBACZ,KAAvBN,EAAaK,QAClBL,EAAaO,cAEbP,EAAaQ,aAAaR,EAAaK,MAAO,MAGnD,CAACL,EAAaK,QAEjB,IAAMI,EAAe,SAAAC,GACjBZ,EAAQa,KAAK,eACbX,EAAaY,QAAQF,EAAEG,OAAOR,QAKlC,OACI,eAACX,EAAD,CAAcoB,MAAO,CAAEC,gBAAgB,uCAAD,cAAyCf,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAcgB,aAAvD,MAAtC,UACI,+CAEA,cAACC,EAAA,EAAD,CACIC,GAAG,eACHC,QAASnB,EAAaoB,OAAOC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,SACpDC,kBAAmB,SAACC,GAAD,OAAYA,GAC/BpB,MAAOL,EAAaK,MACpBqB,cAAe,SAACC,EAAOtB,GAAR,OAAkBL,EAAaY,QAAQP,IACtDuB,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,yBACrBC,UAAW5B,EAAQlB,MACnB+C,SAAUvB,EACVS,GAAG,gBAAmBW,GAHD,IAIrBI,MAAM,SACNC,QAAQ","file":"static/js/7.264f48ba.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    input: {\r\n        background: 'linear-gradient(45deg, rgb(255, 142, 83) 10%, rgb(0,0,0) 90%)',\r\n        width: '80%',\r\n        margin: '0 auto',\r\n        textAlign: 'center',\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        top: '70%',\r\n        left: '10%'\r\n\r\n    },\r\n});\r\nexport const StyledHeader = styled.header`\r\nwidth: 100%;\r\nheight: 500px;\r\ntext-align:center;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\nbackground-position-x: center;\r\nposition: relative;\r\ncolor: white;\r\nmargin-top: 15px;\r\nfont-size: 1.2rem;\r\n#search-photo, #search-photo-label, #search-photo-popup, .MuiSvgIcon-root{\r\n    color: white;\r\n};\r\n@media(min-width: 760px) {\r\n    font-size: 1.5rem;\r\n};\r\n@media(min-width: 1150px) {\r\n    height: 700px\r\n};\r\n@media(min-width: 1800px) {\r\n    height: 900px\r\n};\r\n`;\r\n\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport FetchContext from \"../../context/fetch/fetchContext\";\r\n\r\n// const Alert = lazy(() => import('../organism/Alert'));\r\nimport { useStyles, StyledHeader } from '../../styles/styleComponents/StyledSearch';\r\n\r\nconst Search = () => {\r\n\r\n    const history = useHistory()\r\n    const fetchContext = useContext(FetchContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (fetchContext.value === '') fetchContext.getPopularMovies()\r\n        else if (fetchContext.value !== '') {\r\n            fetchContext.resetMovies()\r\n\r\n            fetchContext.searchMovies(fetchContext.value, 1);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [fetchContext.value]);\r\n\r\n    const handleChange = e => {\r\n        history.push('/listMovies')\r\n        fetchContext.setText(e.target.value);\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <StyledHeader style={{ backgroundImage: `url(https://image.tmdb.org/t/p/w1280${fetchContext?.popularMovie})` }}>\r\n            <h1>Search movies</h1>\r\n            {/* <Alert /> */}\r\n            <Autocomplete\r\n                id=\"search-photo\"\r\n                options={fetchContext.movies.map(element => element.title)}\r\n                getOptionSelected={(option) => option}\r\n                value={fetchContext.value}\r\n                onInputChange={(event, value) => fetchContext.setText(value)}\r\n                renderInput={(params) => <TextField\r\n                    className={classes.input}\r\n                    onChange={handleChange}\r\n                    id=\"filled-basic\" {...params}\r\n                    label=\"Search\"\r\n                    variant=\"filled\" />}\r\n            />\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nexport default Search;"],"sourceRoot":""}